# Déploiement d'une instance MySQL dans le namespace database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.database.deployment.name }}
  namespace: {{ .Values.database.namespace }}
  labels:
    app: {{ .Values.database.app.label }}

spec:
  replicas: {{ .Values.database.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.database.app.label }}

  template:
    metadata:
      labels:
        app: {{ .Values.database.app.label }}

    spec:
      containers:
      - name: {{ .Values.database.container.name }}
        image: "{{ .Values.database.container.image }}:{{ .Values.database.container.tag }}"
        imagePullPolicy: IfNotPresent  # Télécharge l'image seulement si elle n'est pas présente

        ports:
        - containerPort: {{ .Values.database.container.port }}
          name: {{ .Values.database.container.portName }}

        env:
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret.name }}
              key: {{ .Values.database.secret.keys.database }}

        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret.name }}
              key: {{ .Values.database.secret.keys.user }}     

        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret.name }}
              key: {{ .Values.database.secret.keys.password }}
        
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret.name }}
              key: {{ .Values.database.secret.keys.rootPassword }}

        volumeMounts:
        - name: {{ .Values.database.volume.name }}
          mountPath: {{ .Values.database.volume.mountPath }}

        resources:
          requests:
            memory: {{ .Values.database.resources.requests.memory }} 
            cpu: {{ .Values.database.resources.requests.cpu }}
          limits:
            memory: {{ .Values.database.resources.limits.memory }}
            cpu: {{ .Values.database.resources.limits.cpu }}

      volumes:
      - name: {{ .Values.database.volume.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.database.pvc.name }}

---
# Service pour exposer MySQL à l'intérieur du cluster
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.database.service.name }}
  namespace: {{ .Values.database.namespace }}
  labels:
    app: {{ .Values.database.app.label }}

spec:
  type: {{ .Values.database.service.type }}
  selector:
    app: {{ .Values.database.app.label }}

  ports:
  - protocol: TCP
    port: {{ .Values.database.service.port }}
    targetPort: {{ .Values.database.service.targetPort }}
    name: {{ .Values.database.container.portName }}